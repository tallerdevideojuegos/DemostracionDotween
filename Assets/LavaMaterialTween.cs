using DG.Tweening;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class LavaMaterialTween : MonoBehaviour
{
    public GameObject target;

    Tween emissionTween, offsetTween;

    void Start()
    {
        if (target == null)
            target = gameObject;

        FinalDemoBrain.Instance.OnFrecuenciaChanged += ChangeFrequency;

        // Store the material, since we will tween that
        Material mat = target.GetComponent<Renderer>().material;


        // EMISSION
        // Note that the float value you see in Unity's inspector, next to the emission's color,
        // doesn't really exist in the shader (it's generated by Unity's inspector and applied to the material's color),
        // se we have to tween the full _EmissionColor.
        emissionTween = mat.DOColor(new Color(0.2f, 0.2f, 0.2f, 0), "_EmissionColor", 3).SetEase(Ease.Flash).SetLoops(-1, LoopType.Yoyo);

        // OFFSET
        // In this case we set the loop to Incremental and the ease to Linear, because it's cooler
        offsetTween = mat.DOOffset(new Vector2(1, 1), 10).SetEase(Ease.Linear).SetLoops(-1, LoopType.Incremental);
    }

    private void OnDestroy()
    {
        FinalDemoBrain.Instance.OnFrecuenciaChanged -= ChangeFrequency;
    }

    void ChangeFrequency(float nuevaFrequencia)
    {
        emissionTween.timeScale = nuevaFrequencia;
        offsetTween.timeScale = nuevaFrequencia;
    }

}
