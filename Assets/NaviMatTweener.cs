using DG.Tweening;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class NaviMatTweener : MonoBehaviour
{
    public GameObject target;

    Tween colorTween;

    void Start()
    {
        if (target == null)
            target = gameObject;

        FinalDemoBrain.Instance.OnFrecuenciaChanged += ChangeFrequency;

        // Store the material, since we will tween that
        Material mat = target.GetComponent<Renderer>().material;


        // EMISSION
        // Note that the float value you see in Unity's inspector, next to the emission's color,
        // doesn't really exist in the shader (it's generated by Unity's inspector and applied to the material's color),
        // se we have to tween the full _EmissionColor.
        colorTween = mat.DOColor(new Color(106/255, 150/255, 255/255), 3).SetEase(Ease.Flash).SetLoops(-1, LoopType.Yoyo);

    }

    private void OnDestroy()
    {
        FinalDemoBrain.Instance.OnFrecuenciaChanged -= ChangeFrequency;
    }

    void ChangeFrequency(float nuevaFrequencia)
    {
        //emissionTween. (new Vector3(target.localScale.x, scaleToGet, target.localScale.z), nuevaFrequencia);
        //offsetTween
    }
}
